version: 2.1

common_cache_key: &common_cache_key
  key: dependency-cache-{{ checksum "../ocaml-version" }}-{{ checksum ".circleci/config.yml" }}-{{ checksum "httpaf.opam" }}-{{ checksum "httpaf-async.opam" }}-{{ checksum "httpaf-lwt.opam" }}-{{ checksum "httpaf-lwt-unix.opam" }}-{{ checksum "httpaf-mirage.opam" }}

esy_cache_key: &esy_cache_key
  key: esy-cache-{{ checksum "esy.json" }}-{{ checksum "../esy-checksum" }}-{{ checksum ".circleci/config.yml" }}

esy_post_build_cache_key: &esy_post_build_cache_key
  key: esy-post-build-cache-{{ checksum "esy.json" }}-{{ checksum "../esy-checksum" }}-{{ checksum ".circleci/config.yml" }}

opam-steps: &opam-steps
  parameters:
    all_tests:
      type: boolean
      default: true
  steps:
    - checkout
    - run:
        name: "Pull Submodules"
        command: git submodule update --init --recursive
    - run:
        name: "Note OCAML_VERSION for cache"
        command: echo $OCAML_VERSION > ../ocaml-version
    - restore_cache:
        <<: *common_cache_key
    - run:
        name: "Initialize opam"
        command: |
          sudo apt-get install -y m4
          opam init --auto-setup --dot-profile=~/.bash_profile
          opam remote add ocamlorg https://opam.ocaml.org || true
          opam remote remove default || true
    - run:
        name: "Install deps"
        command: |
          sudo apt-get install -y pkg-config libgmp-dev lsof libssl-dev
          opam update
          opam install -y dune
          opam install -y lwt_ssl
          opam install -t --deps-only --best-effort .
    - run:
        name: 'Clean'
        command: rm -rf ./_build
    - save_cache:
        <<: *common_cache_key
        paths:
          - ~/.opam
    - when:
        condition: <<parameters.all_tests>>
        steps:
          - run:
              name: 'Test'
              command: |
                eval `opam config env`
                dune build @all
                dune runtest --no-buffer
    - unless:
        condition: <<parameters.all_tests>>
        steps:
          - run:
              name: 'Test'
              command: |
                eval `opam config env`
                dune build @async/all @lwt-unix/all @examples/lwt/all @examples/async/all
                dune runtest --no-buffer
    - run:
        name: 'Check git is clean'
        command: git diff --exit-code

jobs:
  OCaml-404:
    docker:
      - image: ocaml/opam2:debian-10-ocaml-4.04
    environment:
      - TERM: dumb
      - OCAML_VERSION: "4.04.2"
      - OPAMSOLVERTIMEOUT: "1200"
    <<: *opam-steps
  OCaml-405:
    docker:
      - image: ocaml/opam2:debian-10-ocaml-4.05
    environment:
      - TERM: dumb
      - OCAML_VERSION: "4.05.0"
      - OPAMSOLVERTIMEOUT: "600"
    <<: *opam-steps
  OCaml-406:
    docker:
      - image: ocaml/opam2:debian-10-ocaml-4.06
    environment:
      - TERM: dumb
      - OCAML_VERSION: "4.06.1"
      - OPAMSOLVERTIMEOUT: "300"
    <<: *opam-steps
  OCaml-407:
    docker:
      - image: ocaml/opam2:debian-10-ocaml-4.07
    environment:
      - TERM: dumb
      - OCAML_VERSION: "4.07.1"
    <<: *opam-steps
  OCaml-408:
    docker:
      - image: ocaml/opam2:debian-10-ocaml-4.08
    environment:
      - TERM: dumb
      - OCAML_VERSION: "4.08.1"
    <<: *opam-steps
  OCaml-409:
    docker:
      - image: ocaml/opam2:debian-10-ocaml-4.09
    environment:
      - TERM: dumb
      - OCAML_VERSION: "4.09.0"
    <<: *opam-steps
  esy:
    docker:
      - image: circleci/node:12.8
    environment:
      - TERM: dumb
      - NPM_CONFIG_PREFIX: "~/.npm-global"
    steps:
      - checkout
      - run:
          name: "Pull Submodules"
          command: git submodule update --init --recursive
      - run:
          name: 'Note esy.lock checksum for cache'
          command: find esy.lock -type f -exec md5sum {} \; | sort -k 2 | md5sum > ../esy-checksum
      - restore_cache:
          <<: *esy_cache_key
      - restore_cache:
          <<: *esy_post_build_cache_key
      - run:
          name: "Install esy"
          command: npm install -g esy
      - run:
          name: 'esy install'
          command: ~/.npm-global/bin/esy install
      - save_cache:
          <<: *esy_cache_key
          paths:
            - ~/.npm-global
            - ~/.esy
      - run:
          name: 'esy build'
          command: ~/.npm-global/bin/esy b dune build @all
      - run:
          name: 'esy test'
          command: ~/.npm-global/bin/esy b dune runtest --no-buffer
      # Use both pre and post build caches so that we're more likely
      # to have dependencies cached. `esy build` is more likely to fail,
      # so this will make the push that fixes the build faster
      - save_cache:
          <<: *esy_post_build_cache_key
          paths:
            - ~/.esy
            - node_modules

workflows:
  version: 2
  build-deploy:
    jobs:
      - OCaml-404:
          all_tests: false
          filters:
            branches:
              ignore:
                - gh-pages
      - OCaml-405:
          all_tests: false
          filters:
            branches:
              ignore:
                - gh-pages
      - OCaml-406:
          all_tests: false
          filters:
            branches:
              ignore:
                - gh-pages
      - OCaml-407:
          filters:
            branches:
              ignore:
                - gh-pages
      - OCaml-408:
          filters:
            branches:
              ignore:
                - gh-pages
      - OCaml-409:
          filters:
            branches:
              ignore:
                - gh-pages
      - esy:
          filters:
            branches:
              ignore:
                - gh-pages
